apiVersion: v1
kind: Pod
metadata:
  name: fets-pod
  labels:
    app: fets-brats
spec:
  nodeSelector:
    nautilus.io/linstor: "true"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          # Both conditions must be satisfied (AND relationship)
          - key: kubernetes.io/hostname
            operator: NotIn
            values:
            - gpu-01.nrp.mghpcc.org
          - key: nvidia.com/gpu.product
            operator: In
            values:
            - NVIDIA-A10
            - NVIDIA-GeForce-RTX-3090
            - NVIDIA-GeForce-RTX-4090
            - NVIDIA-TITAN-RTX
            - NVIDIA-RTX-A5000
            - Quadro-RTX-6000
            - Tesla-V100-SXM2-32GB
            - NVIDIA-A40
            - NVIDIA-L40
            - NVIDIA-RTX-A6000
            - Quadro-RTX-8000

  tolerations:
  - key: nvidia.com/gpu
    operator: Exists
    effect: PreferNoSchedule
  containers:
  - name: fets-container
    image: ghcr.io/fets-ai/front-end:1.0.2
    env:
      - name: REPO_PATH
        value: /app/brats-synthesis
      - name: CUDA_VISIBLE_DEVICES
        value: "0"
    command: ["/bin/bash"]
    args:
      - -c
      - |
        apt-get update
        mv /workspace/FeTS_0.0.9/squashfs-root/usr/lib/liblzma.so.5 /workspace/FeTS_0.0.9/squashfs-root/usr/lib/liblzma.so.5.bak
        apt-get install -y git sudo
        
        git clone https://github.com/tsereda/brats-synthesis.git ${REPO_PATH}
        cd ${REPO_PATH}
        
        apt-get install -y p7zip-full wget
        #pip install nibabel numpy
        
        # sudo 7z x "/data/ASNR-MICCAI-BraTS2023-GLI-Challenge-TrainingData.zip"
        # sudo chown -R jovyan:jovyan "/data/ASNR-MICCAI-BraTS2023-GLI-Challenge-TrainingData"

        # sudo 7z x "/data/ASNR-MICCAI-BraTS2023-GLI-Challenge-ValidationData.zip"
        # sudo chown -R jovyan:jovyan "/data/ASNR-MICCAI-BraTS2023-GLI-Challenge-ValidationData"
        
        # python dropout_modality.py \
        #   --input_dir ASNR-MICCAI-BraTS2023-GLI-Challenge-ValidationData \
        #   --output_dir pseudo_validation
          
        # python dropout_modality.py --verify --output_dir pseudo_validation

        # pip install torch monai[all] nibabel

        # python inf_synth.py

        # chmod +x convert_to_fets_format.sh
        # ./convert_to_fets_format.sh -i completed_cases -o fets_formatted

        # /workspace/FeTS_0.0.9/FeTS/0.0.9/FeTS-0.0.9.bin --appimage-extract

        # ./squashfs-root/usr/bin/fets_cli_segment -d fets_formatted/ -a fets_singlet,fets_triplet -lF STAPLE,ITKVoting,SIMPLE,MajorityVoting -g 0 -t 0
        
        tail -f /dev/null
    volumeMounts:
      - name: data
        mountPath: /data
    resources:
      requests:
        memory: 24Gi      
        cpu: "12"     
        nvidia.com/gpu: "1" 
      limits:
        memory: 32Gi
        cpu: "16"
        nvidia.com/gpu: "1"
  volumes:
    - name: data
      persistentVolumeClaim:
        claimName: brats2025-3